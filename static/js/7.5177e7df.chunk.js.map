{"version":3,"sources":["api/http.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","views/pages/login/Login.js"],"names":["url","http","axios","create","baseURL","paramsSerializer","params","qs","stringify","indices","interceptors","request","use","config","jwt","localStorage","getItem","undefined","headers","error","Promise","reject","response","status","this","parseError","data","messages","parseBody","console","warn","Array","cilLockLocked","Login","history","useHistory","useState","username","setUsername","password","setPassword","className","md","icon","cilUser","placeholder","autoComplete","onChange","e","target","value","type","xs","color","onClick","post","then","res","alert","setItem","push","catch","err","style","width","to","active","tabIndex"],"mappings":"wIAAA,wCAGIA,EAAM,wBAMNA,EAAM,6CAuBV,IAAIC,EAAOC,IAAMC,OAAO,CACpBC,QAASJ,EACTK,iBAAkB,SAAUC,GACxB,OAAOC,IAAGC,UAAUF,EAAQ,CAACG,SAAS,OAI9CR,EAAKS,aAAaC,QAAQC,KAAI,SAACC,GAC3B,IAAIC,EAAMC,aAAaC,QAAQ,OAI/B,OAHY,OAARF,QAAwBG,IAARH,IAChBD,EAAOK,QAAU,CAAC,cAAiB,UAAYJ,IAE5CD,KACR,SAAAM,GACC,OAAOC,QAAQC,OAAOF,MAG1BlB,EAAKS,aAAaY,SAASV,KAAI,SAACU,GAC5B,OA1BJ,SAAmBA,GACf,OAAwB,MAApBA,EAASC,OACFD,EAEAE,KAAKC,WAAWH,EAASI,KAAKC,UAsBlCC,CAAUN,MAClB,SAAAH,GAEC,OADAU,QAAQC,KAAK,eAAgBX,EAAMG,UAC/BH,EAAMG,UAzCMK,EA0CMR,EAAMG,UAxCpBK,aAAoBI,MACbX,QAAQC,OAAO,CAACM,SAAUA,IAE1BP,QAAQC,OAAO,CAACM,SAAU,CAACA,KAG/BP,QAAQC,OAAO,CAACM,SAAU,CAAC,eAoC3BP,QAAQC,OAAOF,GA5C9B,IAAoBQ,KAgDL1B,O,qDC5Df,kCAAO,IAAM+B,EAAgB,CAAC,UAAU,+Q,6HCyGzBC,UAtFD,WACV,IAAMC,EAAUC,cAChB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAgBA,OACI,qBAAKC,UAAU,yDAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACI,cAAC,IAAD,CAAMC,GAAI,EAAV,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,uCACA,mBAAGA,UAAU,uBAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOE,KAAMC,QAEjB,cAAC,IAAD,CACIC,YAAY,WACZC,aAAa,WACbC,SAAU,SAACC,GAAD,OAAOV,EAAYU,EAAEC,OAAOC,aAE9C,eAAC,IAAD,CAAaT,UAAU,OAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOE,KAAMX,QAEjB,cAAC,IAAD,CACImB,KAAK,WACLN,YAAY,WACZC,aAAa,mBACbC,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOC,aAG9C,cAAC,IAAD,UACI,cAAC,IAAD,CAAME,GAAI,EAAV,SACI,cAAC,IAAD,CAASC,MAAM,UAAUZ,UAAU,OAAOa,QAAS,WA/C3FrD,IACKsD,KAAK,cAAe,CAAClB,WAAUE,aAC/BiB,MAAK,SAACC,QACcxC,IAAbwC,EAAI/B,MAAmC,KAAb+B,EAAI/B,KAC9BgC,MAAM,gBAEN3C,aAAa4C,QAAQ,MAAMF,EAAI/B,MAC/BQ,EAAQ0B,KAAK,aAGpBC,OAAM,SAACC,GACJJ,MAAM,gBAAkBI,OAoCQ,8BAQpB,cAAC,IAAD,CAAOrB,UAAU,6BAA6BsB,MAAO,CAACC,MAAO,OAA7D,SACI,cAAC,IAAD,CAAWvB,UAAU,cAArB,SACI,gCACI,yCACA,uDAGA,+DAGA,cAAC,IAAD,CAAMwB,GAAG,YAAT,SACI,cAAC,IAAD,CAASZ,MAAM,UAAUZ,UAAU,OAAOyB,QAAM,EAACC,UAAW,EAA5D","file":"static/js/7.5177e7df.chunk.js","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\n\nlet url = \"http://localhost:8080\"\n\nif(process.env.NODE_ENV === 'development') {\n    url = \"http://localhost:8080\"\n}\nif(process.env.NODE_ENV === 'production') {\n    url = \"https://mloi-ticket-tracker.herokuapp.com/\"\n}\n\nfunction parseError(messages) {\n    if (messages) {\n        if (messages instanceof Array) {\n            return Promise.reject({messages: messages})\n        } else {\n            return Promise.reject({messages: [messages]})\n        }\n    } else {\n        return Promise.reject({messages: [\"--error--\"]})\n    }\n}\n\nfunction parseBody(response) {\n    if (response.status === 200) {\n        return response\n    } else {\n        return this.parseError(response.data.messages)\n    }\n}\n\nlet http = axios.create({\n    baseURL: url,\n    paramsSerializer: function (params) {\n        return qs.stringify(params, {indices: false})\n    }\n})\n\nhttp.interceptors.request.use((config) => {\n    let jwt = localStorage.getItem(\"jwt\");\n    if (jwt !== null && jwt !== undefined) {\n        config.headers = {'Authorization': 'Bearer ' + jwt}\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n})\n\nhttp.interceptors.response.use((response) => {\n    return parseBody(response)\n}, error => {\n    console.warn('Error status', error.response)\n    if (error.response) {\n        return parseError(error.response)\n    } else {\n        return Promise.reject(error)\n    }\n})\n\nexport default http\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","import React, {useState} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CFormInput,\n    CInputGroup,\n    CInputGroupText,\n    CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {cilLockLocked, cilUser} from '@coreui/icons'\nimport http from \"../../../api/http\";\n\nconst Login = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const onLogin = () => {\n        http\n            .post('/auth/login', {username, password})\n            .then((res) => {\n                if (res.data === undefined || res.data === '') {\n                    alert(\"Login Error\");\n                } else {\n                    localStorage.setItem(\"jwt\",res.data);\n                    history.push(\"/home\");\n                }\n            })\n            .catch((err) => {\n                alert(\"Login Error\\n\" + err)\n            })\n    }\n    return (\n        <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n            <CContainer>\n                <CRow className=\"justify-content-center\">\n                    <CCol md={8}>\n                        <CCardGroup>\n                            <CCard className=\"p-4\">\n                                <CCardBody>\n                                    <CForm>\n                                        <h1>Login</h1>\n                                        <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                                        <CInputGroup className=\"mb-3\">\n                                            <CInputGroupText>\n                                                <CIcon icon={cilUser}/>\n                                            </CInputGroupText>\n                                            <CFormInput\n                                                placeholder=\"Username\"\n                                                autoComplete=\"username\"\n                                                onChange={(e) => setUsername(e.target.value)}/>\n                                        </CInputGroup>\n                                        <CInputGroup className=\"mb-4\">\n                                            <CInputGroupText>\n                                                <CIcon icon={cilLockLocked}/>\n                                            </CInputGroupText>\n                                            <CFormInput\n                                                type=\"password\"\n                                                placeholder=\"Password\"\n                                                autoComplete=\"current-password\"\n                                                onChange={(e) => setPassword(e.target.value)}\n                                            />\n                                        </CInputGroup>\n                                        <CRow>\n                                            <CCol xs={6}>\n                                                <CButton color=\"primary\" className=\"px-4\" onClick={() => onLogin()}>\n                                                    Login\n                                                </CButton>\n                                            </CCol>\n                                        </CRow>\n                                    </CForm>\n                                </CCardBody>\n                            </CCard>\n                            <CCard className=\"text-white bg-primary py-5\" style={{width: '44%'}}>\n                                <CCardBody className=\"text-center\">\n                                    <div>\n                                        <h2>Sign up</h2>\n                                        <p>\n                                            Help us grow.Join now.\n                                        </p>\n                                        <p>\n                                            It's 100% free and quite easy.\n                                        </p>\n                                        <Link to=\"/register\">\n                                            <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                                                Register Now!\n                                            </CButton>\n                                        </Link>\n                                    </div>\n                                </CCardBody>\n                            </CCard>\n                        </CCardGroup>\n                    </CCol>\n                </CRow>\n            </CContainer>\n        </div>\n    )\n}\n\nexport default Login\n"],"sourceRoot":""}