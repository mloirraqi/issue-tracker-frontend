{"version":3,"sources":["api/http.js","views/pages/register/Register.js"],"names":["http","axios","create","baseURL","paramsSerializer","params","qs","stringify","indices","interceptors","request","use","config","jwt","localStorage","getItem","undefined","headers","error","Promise","reject","response","status","this","parseError","data","messages","parseBody","console","warn","Array","Register","history","useHistory","useState","usernameAvailable","setUsernameAvailable","username","setUsername","password","setPassword","password2","setPassword2","className","md","lg","xl","icon","cilUser","valid","placeholder","autoComplete","onChange","e","get","then","res","onUsernameChange","target","value","cilLockLocked","type","onClick","alert","post","push","color","to"],"mappings":"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","file":"static/js/5.fc082b66.chunk.js","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\n\nlet url = \"http://localhost:8080\"\n\nfunction parseError(messages) {\n    if (messages) {\n        if (messages instanceof Array) {\n            return Promise.reject({messages: messages})\n        } else {\n            return Promise.reject({messages: [messages]})\n        }\n    } else {\n        return Promise.reject({messages: [\"--error--\"]})\n    }\n}\n\nfunction parseBody(response) {\n    if (response.status === 200) {\n        return response\n    } else {\n        return this.parseError(response.data.messages)\n    }\n}\n\nlet http = axios.create({\n    baseURL: url,\n    paramsSerializer: function (params) {\n        return qs.stringify(params, {indices: false})\n    }\n})\n\nhttp.interceptors.request.use((config) => {\n    let jwt = localStorage.getItem(\"jwt\");\n    if (jwt !== null && jwt !== undefined) {\n        config.headers = {'Authorization': 'Bearer ' + jwt}\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n})\n\nhttp.interceptors.response.use((response) => {\n    return parseBody(response)\n}, error => {\n    console.warn('Error status', error.response)\n    if (error.response) {\n        return parseError(error.response)\n    } else {\n        return Promise.reject(error)\n    }\n})\n\nexport default http\n","import React, {useState} from 'react'\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCol,\n    CContainer,\n    CForm,\n    CFormInput,\n    CInputGroup,\n    CInputGroupText,\n    CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {cilLockLocked, cilUser} from '@coreui/icons'\nimport {Link, useHistory} from \"react-router-dom\";\nimport http from \"../../../api/http\";\n\nconst Register = () => {\n    const history = useHistory();\n    const [usernameAvailable, setUsernameAvailable] = useState(false);\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [password2, setPassword2] = useState('')\n\n    const onRegister = () => {\n        if (username === '' || password !== password2 || password === '') {\n            alert(\"Please fill up the form\")\n        }\n        http\n            .post(\"/auth/join\", {username, password})\n            .then((res) => {\n                if (res.data === true) {\n                    history.push(\"/login\");\n                } else {\n                    alert(\"Account creation failed\\n\");\n                }\n            });\n\n    }\n\n    const onUsernameChange = (username) => {\n        setUsername(username)\n        if (username !== '') {\n            http\n                .get(\"/auth/check/?username=\" + username)\n                .then((res) => {\n                    setUsernameAvailable(res.data);\n                })\n        } else {\n            setUsernameAvailable(false);\n        }\n    }\n\n    return (\n        <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n            <CContainer>\n                <CRow className=\"justify-content-center\">\n                    <CCol md={9} lg={7} xl={6}>\n                        <CCard className=\"mx-4\">\n                            <CCardBody className=\"p-4\">\n                                <CForm>\n                                    <h1>Register</h1>\n                                    <p className=\"text-medium-emphasis\">Create your account</p>\n                                    <CInputGroup className=\"mb-3\">\n                                        <CInputGroupText>\n                                            <CIcon icon={cilUser}/>\n                                        </CInputGroupText>\n                                        <CFormInput\n                                            valid={usernameAvailable}\n                                            placeholder=\"Username\"\n                                            autoComplete=\"username\"\n                                            onChange={(e) => onUsernameChange(e.target.value)}/>\n                                    </CInputGroup>\n                                    <CInputGroup className=\"mb-3\">\n                                        <CInputGroupText>\n                                            <CIcon icon={cilLockLocked}/>\n                                        </CInputGroupText>\n                                        <CFormInput\n                                            type=\"password\"\n                                            placeholder=\"Password\"\n                                            autoComplete=\"new-password\"\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n                                    </CInputGroup>\n                                    <CInputGroup className=\"mb-4\">\n                                        <CInputGroupText>\n                                            <CIcon icon={cilLockLocked}/>\n                                        </CInputGroupText>\n                                        <CFormInput\n                                            valid={password === password2 && password !== ''}\n                                            type=\"password\"\n                                            placeholder=\"Repeat password\"\n                                            autoComplete=\"new-password\"\n                                            onChange={(e) => setPassword2(e.target.value)}\n                                        />\n                                    </CInputGroup>\n                                    <div className=\"d-grid\">\n                                        <CButton\n                                            onClick={() => onRegister()}\n                                            color=\"success\">\n                                            Create Account\n                                        </CButton>\n                                    </div>\n                                </CForm>\n                                <div className=\"h-10\"/>\n                                <Link to=\"/login\">\n                                    <div className=\"d-grid\">\n                                        <CButton color=\"primary\">Have an account?</CButton>\n                                    </div>\n                                </Link>\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                </CRow>\n            </CContainer>\n        </div>\n    )\n}\n\nexport default Register\n"],"sourceRoot":""}